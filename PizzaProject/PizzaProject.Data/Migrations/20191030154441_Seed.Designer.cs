// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaProject.Data;

namespace PizzaProject.Data.Migrations
{
    [DbContext(typeof(PizzaProjectContext))]
    [Migration("20191030154441_Seed")]
    partial class Seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("PizzaProject.Domain.Entities.Customization", b =>
                {
                    b.Property<string>("UId")
                        .HasColumnType("TEXT");

                    b.Property<int>("AdicionalTime")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("UId");

                    b.ToTable("Customizations");

                    b.HasData(
                        new
                        {
                            UId = "1df4a9ef-7a31-472e-af05-c69933d81e37",
                            AdicionalTime = 0,
                            CreatedAt = new DateTime(2019, 10, 30, 15, 44, 40, 931, DateTimeKind.Local).AddTicks(8600),
                            Name = "Bacon Extra",
                            Price = 3.0
                        },
                        new
                        {
                            UId = "a9eab6bc-81dc-4785-9dcb-17fdcad95790",
                            AdicionalTime = 0,
                            CreatedAt = new DateTime(2019, 10, 30, 15, 44, 40, 931, DateTimeKind.Local).AddTicks(9730),
                            Name = "Sem Cebola",
                            Price = 0.0
                        },
                        new
                        {
                            UId = "3f8649aa-14de-4647-9def-9617638857f3",
                            AdicionalTime = 5,
                            CreatedAt = new DateTime(2019, 10, 30, 15, 44, 40, 931, DateTimeKind.Local).AddTicks(9770),
                            Name = "Borda Recheada",
                            Price = 5.0
                        });
                });

            modelBuilder.Entity("PizzaProject.Domain.Entities.Flavor", b =>
                {
                    b.Property<string>("UId")
                        .HasColumnType("TEXT");

                    b.Property<int>("AdicionalTime")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("UId");

                    b.ToTable("Flavors");

                    b.HasData(
                        new
                        {
                            UId = "a3c7c2f2-e3bc-4412-9c22-380f9fa2d20e",
                            AdicionalTime = 0,
                            CreatedAt = new DateTime(2019, 10, 30, 15, 44, 40, 931, DateTimeKind.Local).AddTicks(6650),
                            Name = "Calabresa"
                        },
                        new
                        {
                            UId = "0390e031-ce7a-41f2-89a8-523dda67223f",
                            AdicionalTime = 0,
                            CreatedAt = new DateTime(2019, 10, 30, 15, 44, 40, 931, DateTimeKind.Local).AddTicks(7510),
                            Name = "Marguerita"
                        },
                        new
                        {
                            UId = "713c408d-4a95-4903-9d11-878f59dbf95e",
                            AdicionalTime = 5,
                            CreatedAt = new DateTime(2019, 10, 30, 15, 44, 40, 931, DateTimeKind.Local).AddTicks(7540),
                            Name = "Portuguesa"
                        });
                });

            modelBuilder.Entity("PizzaProject.Domain.Entities.Order", b =>
                {
                    b.Property<string>("UId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("PizzaUId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeToPrepare")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("UId");

                    b.HasIndex("PizzaUId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaProject.Domain.Entities.Pizza", b =>
                {
                    b.Property<string>("UId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FlavorUId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SizeUId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("UId");

                    b.HasIndex("FlavorUId");

                    b.HasIndex("SizeUId");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("PizzaProject.Domain.Entities.PizzaCustomization", b =>
                {
                    b.Property<string>("UId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomizationUId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PizzaUId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("UId");

                    b.HasIndex("CustomizationUId");

                    b.HasIndex("PizzaUId");

                    b.ToTable("PizzaCustomizations");
                });

            modelBuilder.Entity("PizzaProject.Domain.Entities.PizzaSize", b =>
                {
                    b.Property<string>("UId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("TimeToPrepare")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("UId");

                    b.ToTable("PizzaSizes");

                    b.HasData(
                        new
                        {
                            UId = "78cd8095-ea0e-47fc-8cf8-2f660c7c5a01",
                            CreatedAt = new DateTime(2019, 10, 30, 15, 44, 40, 923, DateTimeKind.Local).AddTicks(7210),
                            Name = "Pizza pequena",
                            Price = 20.0,
                            TimeToPrepare = 15
                        },
                        new
                        {
                            UId = "01ac2df6-fda6-401a-af3e-4618da67f929",
                            CreatedAt = new DateTime(2019, 10, 30, 15, 44, 40, 930, DateTimeKind.Local).AddTicks(4670),
                            Name = "Pizza média",
                            Price = 30.0,
                            TimeToPrepare = 20
                        },
                        new
                        {
                            UId = "4563c1b9-f973-40d4-8dc6-5f09fc14ca86",
                            CreatedAt = new DateTime(2019, 10, 30, 15, 44, 40, 930, DateTimeKind.Local).AddTicks(4730),
                            Name = "Pizza grande",
                            Price = 40.0,
                            TimeToPrepare = 25
                        });
                });

            modelBuilder.Entity("PizzaProject.Domain.Entities.Order", b =>
                {
                    b.HasOne("PizzaProject.Domain.Entities.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaUId");
                });

            modelBuilder.Entity("PizzaProject.Domain.Entities.Pizza", b =>
                {
                    b.HasOne("PizzaProject.Domain.Entities.Flavor", "Flavor")
                        .WithMany("Pizzas")
                        .HasForeignKey("FlavorUId")
                        .HasConstraintName("FlavorUId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaProject.Domain.Entities.PizzaSize", "Size")
                        .WithMany("Pizzas")
                        .HasForeignKey("SizeUId")
                        .HasConstraintName("PizzaSizeUId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaProject.Domain.Entities.PizzaCustomization", b =>
                {
                    b.HasOne("PizzaProject.Domain.Entities.Customization", "Customization")
                        .WithMany("PizzaCustomizations")
                        .HasForeignKey("CustomizationUId");

                    b.HasOne("PizzaProject.Domain.Entities.Pizza", "Pizza")
                        .WithMany("PizzaCustomizations")
                        .HasForeignKey("PizzaUId");
                });
#pragma warning restore 612, 618
        }
    }
}
